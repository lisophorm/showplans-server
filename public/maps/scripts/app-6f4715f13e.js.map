{"version":3,"sources":["scripts/app.js"],"names":["angular","module","service","$q","$http","this","getPromise","httpConfig","defer","success","resolve","apply","arguments","error","reject","promise","directive","restrict","templateUrl","replace","scope","data","header","controller","$scope","columns","k","push","factory","utilsService","config","toMongo","csv","console","log","csvObject","JSON","stringify","copy","fromMongo","csvArr","i","results","length","current","id","objectId","parse","createdAt","e","list","def","method","params","order","url","basePath","then","erro","get","update","remove","create","self","createPromise","MainController","$uibModal","$timeout","csvService","Upload","renderTables","tasks","vm","tables","exCeedFunc","$apply","ErrorMessage","acceptSize","showError","CSVCallback","openModal","modalInstance","open","animation","animationsEnabled","ariaLabelledBy","ariaDescribedBy","size","csvData","result","Date","deleteTable","tableLoaded","content","headerVisible","separator","separatorVisible","encoding","encodingVisible","accept","callback","$inject","ModalInstanceCtrl","$uibModalInstance","ok","close","cancel","dismiss","runBlock","defaults","headers","common","applicationId","run","routeConfig","$routeProvider","when","controllerAs","otherwise","redirectTo","constant","restAPIKey","localserver","remoteServer","protocol","window","location","href","indexOf","$templateCache","put"],"mappings":"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","file":"scripts/app-6f4715f13e.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('showPlans', ['ngRoute',  'ngCsvImport','ui.bootstrap','ngAnimate','ngTouch','ngAnimate','ngResource','ngFileUpload']);\n\n})();\n\nangular\n  .module('showPlans')\n  .service('utilsService', function utilsService($q, $http) {\n    this.getPromise = function (httpConfig) {\n      var defer = $q.defer();\n\n      $http(httpConfig)\n        .success(function () {\n          defer.resolve.apply(this, arguments);\n        })\n        .error(function () {\n          defer.reject.apply(this, arguments);\n        });\n\n      return defer.promise;\n    };\n  });\n\n'use strict';\n\nangular.module('showPlans')\n\n  .directive('csvTable', function($http) {\n    return {\n      restrict: 'E',\n      templateUrl:'app/scripts/csvTable.template..html',\n      replace: true,\n      scope: {\n        data: '=',\n        header:'='\n      },\n      controller:function($scope) {\n        $scope.columns=[];\n        if($scope.header) {\n          // could do a little checks here\n          for (var k in $scope.data[0]) {\n            $scope.columns.push(k);\n          }\n        }\n      }\n    };\n  });\n\n\n  'use strict';\n\n  angular\n    .module('showPlans')\n    .factory('csvService', function ($http, $q, utilsService,config) {\n      // Public API here\n      return {\n        list: function () {\n          var def = $q.defer();\n          utilsService.getPromise({\n            method: 'GET',\n            params: {\n              'order': '-createdAt'\n            },\n            url: config.basePath+'/classes/csv'\n          }).then(function (data){\n            def.resolve(fromMongo(data));\n          },function(erro) {\n            def.reject(erro);\n          });\n          return def.promise;\n        },\n\n        get: function (id) {\n          return utilsService.getPromise({\n            method: 'GET',\n            url: config.basePath+'/classes/csv/' + id\n          });\n        },\n\n        update: function (csv) {\n          return utilsService.getPromise({\n            method: 'PUT',\n            data: csv,\n            url: config.basePath+'/classes/csv/' + csv.objectId\n          });\n        },\n\n        remove: function (objectId) {\n          console.log('remove');\n          console.log(objectId);\n          return utilsService.getPromise({\n            method: 'DELETE',\n            url: config.basePath+'/classes/csv/' + objectId\n          });\n        },\n\n        create: function (csv) {\n          var self = this;\n          var defer = $q.defer();\n          console.log('create');\n          console.log(csv);\n          var createPromise = utilsService.getPromise({\n            method: 'POST',\n            url: config.basePath+'/classes/csv',\n            data: toMongo(csv)\n          });\n\n          createPromise.then(function (csv) {\n            self.get(csv.objectId)\n              .then(function () {\n                defer.resolve.apply(this, arguments);\n              });\n          });\n\n          return defer.promise;\n        }\n\n      };\n      function toMongo(csv) {\n        console.log('toMongo');\n        console.log(csv);\n        var csvObject={};\n        if(csv.header) {\n          csvObject.header=true;\n        } else {\n          csvObject.header=false;\n        }\n        csvObject.data=JSON.stringify(angular.copy(csv.data));\n        console.log(csvObject);\n        return csvObject;\n      }\n      function fromMongo(csv) {\n        console.log('fmMongo');\n        console.log(csv);\n        var csvArr=[];\n        for(var i=0;i<csv.results.length;i++) {\n          var current=csv.results[i];\n          try {\n            csvArr.push({\n              id:current.objectId,\n              header:current.header,\n              data:JSON.parse(current.data),\n              createdAt:current.createdAt\n            });\n          } catch (e) {\n            console.log('ERROIN');\n            console.log(e);\n          }\n        }\n        return csvArr;\n      }\n    });\n\n\n\n(function () {\n  'use strict';\n\n  angular\n    .module('showPlans')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($scope, $uibModal, $timeout, csvService, Upload, config) {\n    var vm = this;\n\n    vm.showError = false;\n    vm.ErrorMessage = \"\";\n\n    vm.tableLoaded = false;\n    vm.deleteTable=deleteTable;\n\n    $scope.csv = {\n      content: null,\n      header: false,\n      headerVisible: true,\n      separator: ',',\n      separatorVisible: true,\n      result: null,\n      encoding: 'ISO-8859-1',\n      encodingVisible: true,\n      accept: \".csv\",\n      acceptSize: 2048,\n      callback: CSVCallback,\n      exCeedFunc: exCeedFunc\n    };\n\n    function renderTables() {\n\n      csvService.list()\n        .then(function (tasks) {\n          console.log('tasks');\n          console.log(tasks);\n          vm.tables = tasks;\n          console.log('vm.tables');\n          console.log(vm.tables);\n          $timeout(function () {\n            // some shit for cloaking\n\n          });\n\n        });\n    }\n\n    renderTables();\n\n\n    function exCeedFunc() {\n      $scope.$apply(function () {\n        vm.ErrorMessage = \"Maximum file size: \" + $scope.csv.acceptSize + \"Kb\";\n        vm.showError = true;\n      });\n\n      $timeout(function () {\n        vm.showError = false;\n        console.log('update with timeout fired');\n      }, 10000);\n    }\n\n    function CSVCallback() {\n      openModal();\n    }\n\n    function openModal() {\n      var modalInstance = $uibModal.open({\n        animation: $scope.animationsEnabled,\n        ariaLabelledBy: 'modal-title',\n        ariaDescribedBy: 'modal-body',\n        templateUrl: 'app/partials/modal.template.html',\n        controller: 'ModalInstanceCtrl',\n        size: 'lg',\n        resolve: {\n          header: function () {\n            return $scope.csv.header;\n          },\n          csvData: function () {\n            return $scope.csv.result;\n          }\n        }\n      });\n\n      modalInstance.result.then(function (csvData) {\n\n        console.log(csvData);\n        csvService.create(csvData)\n          .then(function (tasks) {\n            renderTables();\n          });\n      }, function () {\n        console.log('Modal dismissed at: ' + new Date());\n      });\n    };\n\n    function deleteTable(id) {\n      console.log\n      csvService.remove(id).then(\n        function (success) {\n          renderTables();\n        }, function (error) {\n          console.log(error);\n        }\n      )\n    }\n\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('showPlans')\n    .controller('ModalInstanceCtrl', ModalInstanceCtrl);\n\n  function ModalInstanceCtrl($scope, $uibModalInstance, csvData,header) {\n    $scope.csvData = csvData;\n    $scope.header=header;\n\n    $scope.ok = function () {\n      $uibModalInstance.close({data:csvData,header:header});\n    };\n\n    $scope.cancel = function () {\n      $uibModalInstance.dismiss('cancel');\n    };\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('showPlans')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock(config,$http) {\n\n    $http.defaults.headers.common['X-Parse-Application-Id'] = config.applicationId;\n\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('showPlans')\n    .config(routeConfig);\n\n  function routeConfig($routeProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'vm'\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('showPlans').constant('config', {\n    applicationId: 'com.showplan',\n    restAPIKey: '8q3VSq0p1yLg02u9a7QEtRuClXU2B79uPswvZrua',\n    localserver:'localhost:1337/parse',\n    remoteServer:'showplan.herokuapp.com/parse',\n    protocol:'http://'\n\n\n  });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('showPlans')\n    .config(config);\n\n  /** @ngInject */\n  function config(config) {\n    console.log('run config');\n    console.log(config.applicationId);\n    if(window.location.href.indexOf(\"localhost\") > -1) {\n      config.basePath = config.protocol+config.localserver;\n    } else {\n      config.basePath = config.protocol+config.remoteServer;\n    }\n  }\n\n})();\n\nangular.module(\"showPlans\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=container><nav></nav><content></content><div layout=row><div layout=col-md-6><ng-csv-import content=csv.content header=csv.header header-visible=csv.headerVisible separator=csv.separator separator-visible=csv.separatorVisible accept=csv.accept accept-size=csv.acceptSize result=csv.result accept-size-exceed-callback=csv.exCeedFunc callback=csv.callback></ng-csv-import><div class=errorLabel ng-if=vm.showError>Ciao{{vm.ErrorMessage}}</div></div></div><div id=table-area class=ng-cloak ng-repeat=\\\"table in vm.tables\\\"><div layout=row>table id: {{table.id}} created at {{table.createdAt}}</div><csv-table data=table.data header=table.header></csv-table><button ng-click=vm.deleteTable(table.id)>Delete this table</button><hr></div></div>\");\n$templateCache.put(\"app/partials/modal.template.html\",\"<div class=modal-header><h3 class=modal-title id=modal-title>CSV File preview</h3></div><div class=modal-body id=modal-body><csv-table data=csvData header=header></csv-table></div><div class=modal-footer><button class=\\\"btn btn-primary\\\" type=button ng-click=ok()>Save to Mongo</button> <button class=\\\"btn btn-warning\\\" type=button ng-click=cancel()>Foggetaboutit</button></div>\");\n$templateCache.put(\"app/scripts/csvTable.template..html\",\"<table class=\\\"csv-table table table-striped table-hover\\\" cellspacing=0><thead ng-if=header><tr><th ng-repeat=\\\"value in columns\\\">{{value}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in data\\\"><td ng-repeat=\\\"cell in row\\\">{{cell}}</td></tr></tbody></table>\");}]);"],"sourceRoot":"/source/"}