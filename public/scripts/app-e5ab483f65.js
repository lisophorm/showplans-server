!function(){"use strict";angular.module("showPlans",["ngRoute","ngCsvImport","ui.bootstrap","ngAnimate","ngTouch","ngAnimate","ngResource","ngFileUpload"])}(),angular.module("showPlans").service("utilsService",["$q","$http",function(e,t){this.getPromise=function(a){var o=e.defer();return t(a).success(function(){o.resolve.apply(this,arguments)}).error(function(){o.reject.apply(this,arguments)}),o.promise}}]),angular.module("showPlans").directive("csvTable",["$http",function(e){return{restrict:"E",templateUrl:"app/scripts/csvTable.template..html",replace:!0,scope:{data:"=",header:"="},controller:["$scope",function(e){if(e.columns=[],e.header)for(var t in e.data[0])e.columns.push(t)}]}}]),angular.module("showPlans").factory("csvService",["$http","$q","utilsService","config",function(e,t,a,o){function n(e){console.log("toMongo"),console.log(e);var t={};return e.header?t.header=!0:t.header=!1,t.data=JSON.stringify(angular.copy(e.data)),console.log(t),t}function l(e){console.log("fmMongo"),console.log(e);for(var t=[],a=0;a<e.results.length;a++){var o=e.results[a];try{t.push({id:o.objectId,header:o.header,data:JSON.parse(o.data),createdAt:o.createdAt})}catch(n){console.log("ERROIN"),console.log(n)}}return t}return{list:function(){var e=t.defer();return a.getPromise({method:"GET",params:{order:"-createdAt"},url:o.basePath+"/classes/csv"}).then(function(t){e.resolve(l(t))},function(t){e.reject(t)}),e.promise},get:function(e){return a.getPromise({method:"GET",url:o.basePath+"/classes/csv/"+e})},update:function(e){return a.getPromise({method:"PUT",data:e,url:o.basePath+"/classes/csv/"+e.objectId})},remove:function(e){return console.log("remove"),console.log(e),a.getPromise({method:"DELETE",url:o.basePath+"/classes/csv/"+e})},create:function(e){var l=this,r=t.defer();console.log("create"),console.log(e);var s=a.getPromise({method:"POST",url:o.basePath+"/classes/csv",data:n(e)});return s.then(function(e){l.get(e.objectId).then(function(){r.resolve.apply(this,arguments)})}),r.promise}}}]),function(){"use strict";function e(e,t,a,o){e.csvData=a,e.header=o,e.ok=function(){t.close({data:a,header:o})},e.cancel=function(){t.dismiss("cancel")}}e.$inject=["$scope","$uibModalInstance","csvData","header"],angular.module("showPlans").controller("ModalInstanceCtrl",e)}(),function(){"use strict";function e(e,t,a,o,n,l){function r(){o.list().then(function(e){console.log("tasks"),console.log(e),u.tables=e,console.log("vm.tables"),console.log(u.tables),a(function(){})})}function s(){e.$apply(function(){u.ErrorMessage="Maximum file size: "+e.csv.acceptSize+"Kb",u.showError=!0}),a(function(){u.showError=!1,console.log("update with timeout fired")},1e4)}function c(){i()}function i(){var a=t.open({animation:e.animationsEnabled,ariaLabelledBy:"modal-title",ariaDescribedBy:"modal-body",templateUrl:"app/partials/modal.template.html",controller:"ModalInstanceCtrl",size:"lg",resolve:{header:function(){return e.csv.header},csvData:function(){return e.csv.result}}});a.result.then(function(e){console.log(e),o.create(e).then(function(e){r()})},function(){console.log("Modal dismissed at: "+new Date)})}var u=this;u.showError=!1,u.ErrorMessage="",u.tableLoaded=!1,e.csv={content:null,header:!1,headerVisible:!0,separator:",",separatorVisible:!0,result:null,encoding:"ISO-8859-1",encodingVisible:!0,accept:".csv",acceptSize:2048,callback:c,exCeedFunc:s},r()}e.$inject=["$scope","$uibModal","$timeout","csvService","Upload","config"],angular.module("showPlans").controller("MainController",e)}(),function(){"use strict";function e(e,t){t.defaults.headers.common["X-Parse-Application-Id"]=e.applicationId}e.$inject=["config","$http"],angular.module("showPlans").run(e)}(),function(){"use strict";function e(e){e.when("/",{templateUrl:"app/main/main.html",controller:"MainController",controllerAs:"vm"}).otherwise({redirectTo:"/"})}e.$inject=["$routeProvider"],angular.module("showPlans").config(e)}(),function(){"use strict";angular.module("showPlans").constant("config",{applicationId:"com.showplan",restAPIKey:"8q3VSq0p1yLg02u9a7QEtRuClXU2B79uPswvZrua",localserver:"localhost:1337/parse",remoteServer:"showplan.herokuapp.com/parse",protocol:"http://"})}(),function(){"use strict";function e(e){if(console.log("run config"),console.log(e.applicationId),window.location.href.indexOf("localhost")>-1)e.basePath=e.protocol+e.localserver;else{e.protocol+e.remoteServer}}e.$inject=["config"],angular.module("showPlans").config(e)}(),angular.module("showPlans").run(["$templateCache",function(e){e.put("app/main/main.html",'<div class=container><nav></nav><content></content><div layout=row><div layout=col-md-6><ng-csv-import content=csv.content header=csv.header header-visible=csv.headerVisible separator=csv.separator separator-visible=csv.separatorVisible accept=csv.accept accept-size=csv.acceptSize result=csv.result accept-size-exceed-callback=csv.exCeedFunc callback=csv.callback></ng-csv-import><div class=errorLabel ng-if=vm.showError>Ciao{{vm.ErrorMessage}}</div></div></div><div id=table-area class=ng-cloak ng-repeat="table in vm.tables"><div layout=row>table id: {{table.id}} created at {{table.createdAt}}</div><csv-table data=table.data header=table.header></csv-table><button ng-click=vm.deleteTable(table.id)>Delete this table</button><hr></div></div>'),e.put("app/partials/modal.template.html",'<div class=modal-header><h3 class=modal-title id=modal-title>CSV File preview</h3></div><div class=modal-body id=modal-body><csv-table data=csvData header=header></csv-table></div><div class=modal-footer><button class="btn btn-primary" type=button ng-click=ok()>Save to Mongo</button> <button class="btn btn-warning" type=button ng-click=cancel()>Foggetaboutit</button></div>'),e.put("app/scripts/csvTable.template..html",'<table class="csv-table table table-striped table-hover" cellspacing=0><thead ng-if=header><tr><th ng-repeat="value in columns">{{value}}</th></tr></thead><tbody><tr ng-repeat="row in data"><td ng-repeat="cell in row">{{cell}}</td></tr></tbody></table>')}]);
//# sourceMappingURL=../maps/scripts/app-e5ab483f65.js.map
